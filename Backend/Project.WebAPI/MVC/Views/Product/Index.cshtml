@using PagedList;
@using PagedList.Mvc;
@model StaticPagedList<MVC.Models.ProductModel>
@{
    ViewBag.Title = "Index";
}



<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>


<p>
    @using (Html.BeginForm("Index", "Product", FormMethod.Get))
    {

        <b>Search By:</b>@Html.RadioButton("searchBy", "Name")<text>Name</text>
        @Html.TextBox("Search") <input type="submit" value="search" />
    }





</p>
<table class="table">
    <tr>

        <th>
            @Html.ActionLink("Name", "Index", new { IsAscending = ViewBag.sortOrder, search = Request["search"] })
        </th>
        <th>
            @Html.ActionLink("Model", "Index", new { IsAscending = ViewBag.sortOrder })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Quantity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().ProductCategory.Name)
        </th>

    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Model)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductCategory.Name)
            </td>


            <td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>


        </tr>

    }

</table>
Page @(Model.Count < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, PageNumber => Url.Action("Index", new { PageNumber, search = Request.QueryString["search"] }))

